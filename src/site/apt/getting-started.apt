 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

            ------
            Get Started
            ------
            ------
             DD.MM.YYYY
             
Getting Started

  Here is an example to create a simple droid and crawl through some local files

+-------------------------------  
    // first create a task queue, to store the tasks
    Queue<FileTask> queue = new LinkedList<FileTask>();
    // create a taskmaster, to control the tasks in the queue
    TaskMaster<FileTask> taskMaster = new SequentialTaskMaster<FileTask>();
    // we will use a predefined droid, that traverses through the local file system
    SimpleWalkingDroid droid = new SimpleWalkingDroid(queue, taskMaster);
    // now, we define the start point for the crawl
    Collection<File> initialFiles = new LinkedList<File>();
    initialFiles.add(new File("/home/user/Downloads"));
    droid.setInitialFiles(initialFiles);
    
    try {
      // initialize
      droid.init();
      // and start the droid
      droid.start();
      // this blocks the current thread until all other tasks have completed
      droid.getTaskMaster().awaitTermination(0, TimeUnit.MILLISECONDS);
    } catch (Exception e) {
      e.printStackTrace();
    }
+---------------------------------

More Examples

  More examples are available in the droids-examples module. 
  Here you can see how to work with Droids. 
  These test cases demonstrate best practice code and if you want to develop your own droids you should look at them.